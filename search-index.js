var searchIndex = JSON.parse('{\
"dvm":{"doc":"Definance Virtual Machine server implementation on tonic &…","i":[[3,"Options","dvm","Definance Virtual Machine combined with Move compilation…",null,null],[12,"address","","Address in the form of HOST_ADDRESS:PORT. The address will…",0,null],[12,"info_service","","",0,null],[12,"ds","","DataSource Server internet address.",0,null],[12,"logging","","",0,null],[12,"integrations","","",0,null],[5,"main","","",null,[[],["result",6]]],[5,"main_internal","","",null,[[["options",3]],["result",6]]],[17,"MODULE_CACHE","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"clone","","",0,[[],["options",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Options"]]},\
"dvm_cli":{"doc":"","i":[[5,"init","dvm_cli","Init standard handlers for cli-executable. Create standard…",null,[[["integrationsoptions",3],["loggingoptions",3]],["option",4]]],[5,"init_sigterm_handler","","",null,[[],[["signal",4],["receiver",3]]]],[5,"init_sigterm_handler_fut","","",null,[[]]],[0,"config","","",null,null],[3,"LoggingOptions","dvm_cli::config","",null,null],[12,"verbose","","Enables verbosity logging mode. Sets level of verbosity,…",0,null],[12,"log_filters","","Log filters. The same as standard RUST_LOG environment…",0,null],[12,"log_style","","Log colors and other styles. The same as standard…",0,null],[3,"IntegrationsOptions","","",null,null],[12,"sentry_dsn","","Optional key-uri, enables crash logging service…",1,null],[12,"sentry_env","","Sets the environment code to separate events from testnet…",1,null],[17,"RUST_LOG","","",null,null],[17,"RUST_LOG_STYLE","","",null,null],[17,"DVM_LOG","","",null,null],[17,"DVM_LOG_STYLE","","",null,null],[17,"DVM_DATA_SOURCE","","",null,null],[17,"DVM_SENTRY_DSN","","",null,null],[17,"DVM_SENTRY_ENV","","",null,null],[17,"MAX_LOG_VERBOSE","","",null,null],[0,"info_service","dvm_cli","",null,null],[5,"create_info_service","dvm_cli::info_service","Create and run information service.",null,[[["endpoint",4],["infoserviceconfig",3]]]],[0,"logging","dvm_cli","",null,null],[5,"init_logging","dvm_cli::logging","Try init `env_logger` and then Libra\'s logger.",null,[[["loggingoptions",3]],[["setloggererror",3],["result",4]]]],[5,"logging_builder","","Create and preconfigure `env_logger::Builder` using…",null,[[["loggingoptions",3]],["builder",3]]],[11,"from","dvm_cli::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"initialize","","",1,[[]]],[11,"clone","","",0,[[],["loggingoptions",3]]],[11,"clone","","",1,[[],["integrationsoptions",3]]],[11,"default","","",0,[[],["loggingoptions",3]]],[11,"default","","",1,[[],["integrationsoptions",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"into_app","","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"from_arg_matches","","",1,[[["argmatches",3]]]]],"p":[[3,"LoggingOptions"],[3,"IntegrationsOptions"]]},\
"dvm_compiler":{"doc":"","i":[[3,"Compiler","dvm_compiler","",null,null],[5,"compile","","",null,[[["accountaddress",3],["option",4]],[["vec",3],["result",6]]]],[0,"cmd","","",null,null],[0,"build","dvm_compiler::cmd","",null,null],[5,"execute","dvm_compiler::cmd::build","",null,[[["path",3],["movetoml",3]],["result",6]]],[0,"check","dvm_compiler::cmd","",null,null],[5,"execute","dvm_compiler::cmd::check","",null,[[["path",3],["movetoml",3]],["result",6]]],[0,"init","dvm_compiler::cmd","",null,null],[5,"execute","dvm_compiler::cmd::init","",null,[[["path",3],["string",3],["uri",3],["option",4],["option",4]],[["result",4],["error",3]]]],[0,"new","dvm_compiler::cmd","",null,null],[5,"execute","dvm_compiler::cmd::new","",null,[[["path",3],["string",3],["uri",3],["option",4],["option",4]],[["result",4],["error",3]]]],[0,"update","dvm_compiler::cmd","",null,null],[5,"execute","dvm_compiler::cmd::update","",null,[[["path",3],["movetoml",3]],[["result",4],["error",3]]]],[11,"new","dvm_compiler","",0,[[],["compiler",3]]],[11,"compile_source_map","","",0,[[["string",3],["accountaddress",3],["option",4],["hashmap",3]],[["result",6],["hashmap",3]]]],[11,"compile","","",0,[[["accountaddress",3],["option",4]],[["vec",3],["result",6]]]],[0,"manifest","","",null,null],[3,"MoveToml","dvm_compiler::manifest","",null,null],[12,"package","","",1,null],[12,"layout","","",1,null],[3,"Package","","",null,null],[12,"name","","",2,null],[12,"account_address","","",2,null],[12,"authors","","",2,null],[12,"blockchain_api","","",2,null],[3,"Layout","","",null,null],[12,"module_dir","","",3,null],[12,"script_dir","","",3,null],[12,"bytecode_cache","","",3,null],[12,"module_output","","",3,null],[12,"script_output","","",3,null],[12,"temp_dir","","",3,null],[5,"read_manifest","","",null,[[["path",3]],[["movetoml",3],["result",4],["error",3]]]],[5,"store_manifest","","",null,[[["path",3],["movetoml",3]],[["result",4],["error",3]]]],[17,"MANIFEST","","",null,null],[11,"new","","",3,[[],["layout",3]]],[11,"fill","","",3,[[]]],[0,"bech32","dvm_compiler","bech32 -> libra related utils",null,null],[5,"bech32_into_libra","dvm_compiler::bech32","Convert bech32 wallet1 prefixed address into 20 bytes…",null,[[],[["result",6],["string",3]]]],[5,"libra_into_bech32","","Convert libra 20 byte address into bech32 form.",null,[[],[["result",6],["string",3]]]],[5,"replace_bech32_addresses","","Replace all occurrences of bech32 addresses in the…",null,[[],["string",3]]],[7,"HRP","","Fixed prefix of all dfinance bech32 addresses.",null,null],[0,"builder","dvm_compiler","",null,null],[3,"Builder","dvm_compiler::builder","Move builder.",null,null],[5,"report_errors","","Prints errors to stdout.",null,[[["filessourcetext",6],["errors",6]]]],[5,"convert_path","","Converts paths buffers into strings.",null,[[],[["vec",3],["result",6]]]],[0,"dependence","dvm_compiler","",null,null],[0,"extractor","dvm_compiler::dependence","",null,null],[3,"DefinitionUses","dvm_compiler::dependence::extractor","Source definition dependencies extractor.",null,null],[3,"BytecodeUses","","Bytecode dependencies extractor.",null,null],[5,"extract_from_source","","Extract dependencies from source code.",null,[[["accountaddress",3],["option",4]],[["hashset",3],["result",6]]]],[5,"extract_from_bytecode","","Extract dependencies from bytecode.",null,[[],[["hashset",3],["result",6]]]],[0,"loader","dvm_compiler::dependence","",null,null],[3,"ZeroSource","dvm_compiler::dependence::loader","",null,null],[3,"RestBytecodeSource","","",null,null],[3,"LoaderResponse","","",null,null],[3,"Response","","",null,null],[3,"LoaderErrorResponse","","",null,null],[3,"Loader","","",null,null],[5,"make_rest_loader","","",null,[[["path",3],["movetoml",3]],[["result",6],["option",4]]]],[8,"BytecodeSource","","",null,null],[10,"load","","",4,[[["moduleid",3]],[["vec",3],["result",6]]]],[0,"disassembler","dvm_compiler","",null,null],[3,"Config","dvm_compiler::disassembler","Disassembler configuration.",null,null],[3,"ModuleSignature","","",null,null],[5,"module_signature","","",null,[[],[["result",6],["modulesignature",3]]]],[5,"module_signature_with_configuration","","",null,[[["config",3]],[["result",6],["modulesignature",3]]]],[0,"preprocessor","dvm_compiler","",null,null],[5,"pre_processing","dvm_compiler::preprocessor","Preprocess move code.",null,[[],["string",3]]],[11,"from","dvm_compiler","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","dvm_compiler::manifest","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"clear","","",3,[[]]],[11,"initialize","","",3,[[]]],[11,"from","dvm_compiler::builder","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","dvm_compiler::dependence::extractor","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"initialize","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"clear","","",7,[[]]],[11,"initialize","","",7,[[]]],[11,"from","dvm_compiler::dependence::loader","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"initialize","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"initialize","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","dvm_compiler::disassembler","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"initialize","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"load","dvm_compiler::dependence::loader","",8,[[["moduleid",3]],[["vec",3],["result",6]]]],[11,"load","","",9,[[["moduleid",3]],[["vec",3],["result",6]]]],[11,"drop","dvm_compiler::builder","Cleans up the builder layout.",5,[[]]],[11,"clone","dvm_compiler","",0,[[],["compiler",3]]],[11,"clone","dvm_compiler::manifest","",1,[[],["movetoml",3]]],[11,"clone","","",2,[[],["package",3]]],[11,"clone","","",3,[[],["layout",3]]],[11,"clone","dvm_compiler::dependence::loader","",8,[[],["zerosource",3]]],[11,"clone","","",9,[[],["restbytecodesource",3]]],[11,"clone","","",10,[[],["loaderresponse",3]]],[11,"clone","","",11,[[],["response",3]]],[11,"clone","","",12,[[],["loadererrorresponse",3]]],[11,"clone","","",13,[[],["loader",3]]],[11,"default","dvm_compiler::manifest","",1,[[],["movetoml",3]]],[11,"default","","",2,[[],["package",3]]],[11,"default","","",3,[[],["layout",3]]],[11,"default","dvm_compiler::dependence::extractor","",6,[[],["definitionuses",3]]],[11,"default","","",7,[[],["bytecodeuses",3]]],[11,"default","dvm_compiler::dependence::loader","",10,[[],["loaderresponse",3]]],[11,"default","","",11,[[],["response",3]]],[11,"default","","",12,[[],["loadererrorresponse",3]]],[11,"default","dvm_compiler::disassembler","",14,[[]]],[11,"fmt","dvm_compiler::manifest","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::dependence::loader","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler","",15,[[["formatter",3]],["result",6]]],[11,"serialize","dvm_compiler::manifest","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","dvm_compiler::dependence::loader","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"deserialize","dvm_compiler::manifest","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","dvm_compiler::dependence::loader","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"new","dvm_compiler::builder","Creates a new move builder.",5,[[["path",3],["movetoml",3],["option",4]],["builder",3]]],[11,"init_build_layout","","Initializes directory layout.",5,[[],["result",6]]],[11,"load_dependencies","","Load dependencies for each source file.",5,[[],[["hashmap",3],["result",6]]]],[11,"make_dependencies_as_source","","Disassembles dependencies.",5,[[["moduleid",3],["vec",3],["hashmap",3]],[["vec",3],["result",6]]]],[11,"make_source_map","","Makes source map.",5,[[],[["vec",3],["result",6]]]],[11,"preprocess_source_map","","Runs source preprocessor for each source file.",5,[[["vec",3],["pathbuf",3]],[["vec",3],["result",6]]]],[11,"compile","","Compile source list with dependencies.",5,[[["vec",3],["pathbuf",3]],["result",6]]],[11,"check","","Check source files.",5,[[["vec",3],["pathbuf",3]],["result",6]]],[11,"verify_and_store","","Verify and store compiled units.",5,[[["filessourcetext",6],["vec",3],["compiledunit",4]],["result",6]]],[11,"verify","","Verifies sources.",5,[[["filessourcetext",6],["vec",3],["compiledunit",4]],[["result",6],["hashmap",3]]]],[11,"with_address","dvm_compiler::dependence::extractor","Creates extractor with account address.",6,[[["accountaddress",3],["option",4]],["definitionuses",3]]],[11,"extract","","Extracts dependencies from definition.",6,[[["definition",4]],["result",6]]],[11,"imports","","Returns imports.",6,[[],[["hashset",3],["moduleid",3]]]],[11,"imports","","Returns imports.",7,[[],[["hashset",3],["moduleid",3]]]],[11,"extract","","Extracts dependencies from compiled module.",7,[[["compiledmodule",3]],["result",6]]],[11,"new","dvm_compiler::dependence::loader","",9,[[["uri",3]],["restbytecodesource",3]]],[11,"new","","",13,[[["option",4],["pathbuf",3]],["loader",3]]],[11,"get","","",13,[[["moduleid",3]],[["vec",3],["result",6]]]],[11,"self_id","dvm_compiler::disassembler","",15,[[],["moduleid",3]]]],"p":[[3,"Compiler"],[3,"MoveToml"],[3,"Package"],[3,"Layout"],[8,"BytecodeSource"],[3,"Builder"],[3,"DefinitionUses"],[3,"BytecodeUses"],[3,"ZeroSource"],[3,"RestBytecodeSource"],[3,"LoaderResponse"],[3,"Response"],[3,"LoaderErrorResponse"],[3,"Loader"],[3,"Config"],[3,"ModuleSignature"]]},\
"dvm_data_source":{"doc":"Interface between MoveVM `StateView` implementation and…","i":[[0,"grpc","dvm_data_source","`GrpcDataSource` to wrap all gRPC calls to `dnode`.",null,null],[3,"GrpcDataSource","dvm_data_source::grpc","Wrapper around gRPC-based interface to dnode. Used for the…",null,null],[5,"access_path_into_ds","","Convert Libra\'s `AccessPath` into gRPC `DsAccessPath`.",null,[[["accesspath",3]],["dsaccesspath",3]]],[6,"ShutdownSig","","Receiver for a channel that handles shutdown signals.",null,null],[11,"new","","Create an instance of gRPC based data source for VM.…",0,[[["uri",3],["shutdownsig",6],["option",4]],[["grpcdatasource",3],["error",3],["result",4]]]],[0,"metrics","dvm_data_source","Defines `DsMeter` which implements `StateView` and adds…",null,null],[3,"DsMeter","dvm_data_source::metrics","Wrapper for data source which collects metrics queries.",null,null],[11,"new","","Contructor",1,[[],["dsmeter",3]]],[0,"mock","dvm_data_source","`MockDataSource` to be used in test_kit.",null,null],[3,"MockDataSource","dvm_data_source::mock","`StateView` implementation to be used in test_kit.",null,null],[11,"new","","Proxy to default() constructor.",2,[[],["mockdatasource",3]]],[11,"with_write_set","","Create `MockDataSource` with `write_set` applied.",2,[[["writeset",3]],["mockdatasource",3]]],[11,"to_write_set","","Extract `WriteSet` from internal state.",2,[[],[["error",3],["result",4],["writeset",3]]]],[11,"publish_module","","Add module to internal state.",2,[[["vec",3]],[["moduleid",3],["error",3],["result",4]]]],[11,"publish_module_with_id","","Add module with `ModuleId` to internal state.",2,[[["moduleid",3],["vec",3]],[["result",4],["error",3]]]],[11,"clear","","Clear internal chain data.",2,[[]]],[11,"insert","","Wrapper around internal `HashMap.insert()`.",2,[[["vec",3],["accesspath",3]]]],[11,"delete","","Wrapper around internal `HashMap.delete()`.",2,[[["accesspath",3]]]],[11,"merge_write_set","","Merge `WriteSet` into internal chain state.",2,[[["writeset",3]]]],[0,"module_cache","dvm_data_source","Defines `ModuleCache` which implements caching for…",null,null],[3,"ModuleCache","dvm_data_source::module_cache","Cached `DataSource`.",null,null],[11,"new","","Create new cached data source with `cache_size` max number…",3,[[],["modulecache",3]]],[8,"DataSource","dvm_data_source","Thread-safe `StateView`.",null,null],[8,"DataAccess","","Used to automatically implement `get_module` which calls…",null,null],[10,"get_module","","See autoimplementation of the trait for all `StateView`…",4,[[["moduleid",3]],[["option",4],["error",3],["result",4]]]],[8,"Clear","","Trait to `clear()` internal data structure.",null,null],[11,"clear","","No-op in default implementation. Called on internal…",5,[[]]],[11,"get_module","dvm_data_source::grpc","",0,[[["moduleid",3]],[["option",4],["result",4],["error",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"get_module","dvm_data_source::metrics","",1,[[["moduleid",3]],[["option",4],["result",4],["error",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"get_module","dvm_data_source::mock","",2,[[["moduleid",3]],[["option",4],["result",4],["error",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"initialize","","",2,[[]]],[11,"get_module","dvm_data_source::module_cache","",3,[[["moduleid",3]],[["option",4],["result",4],["error",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"clear","dvm_data_source::metrics","",1,[[]]],[11,"clear","dvm_data_source::mock","",2,[[]]],[11,"clear","dvm_data_source::module_cache","",3,[[]]],[11,"clone","dvm_data_source::grpc","",0,[[],["grpcdatasource",3]]],[11,"clone","dvm_data_source::metrics","",1,[[],["dsmeter",3]]],[11,"clone","dvm_data_source::mock","",2,[[],["mockdatasource",3]]],[11,"clone","dvm_data_source::module_cache","",3,[[],["modulecache",3]]],[11,"default","dvm_data_source::mock","",2,[[],["mockdatasource",3]]],[11,"fmt","dvm_data_source::metrics","",1,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_data_source::mock","",2,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_data_source::module_cache","",3,[[["formatter",3]],["result",6]]],[11,"get","dvm_data_source::grpc","",0,[[["accesspath",3]],[["result",4],["option",4],["error",3]]]],[11,"multi_get","","",0,[[],[["error",3],["vec",3],["result",4]]]],[11,"is_genesis","","",0,[[]]],[11,"get","dvm_data_source::metrics","",1,[[["accesspath",3]],[["result",4],["option",4],["error",3]]]],[11,"multi_get","","",1,[[],[["error",3],["vec",3],["result",4]]]],[11,"is_genesis","","",1,[[]]],[11,"get","dvm_data_source::mock","",2,[[["accesspath",3]],[["result",4],["option",4],["error",3]]]],[11,"multi_get","","",2,[[],[["error",3],["vec",3],["result",4]]]],[11,"is_genesis","","",2,[[]]],[11,"get","dvm_data_source::module_cache","",3,[[["accesspath",3]],[["result",4],["option",4],["error",3]]]],[11,"multi_get","","",3,[[],[["error",3],["vec",3],["result",4]]]],[11,"is_genesis","","",3,[[]]],[11,"get","dvm_data_source::grpc","",0,[[["accesspath",3]],[["vmresult",6],["option",4]]]],[11,"get","dvm_data_source::metrics","",1,[[["accesspath",3]],[["vmresult",6],["option",4]]]],[11,"get","dvm_data_source::mock","",2,[[["accesspath",3]],[["vmresult",6],["option",4]]]],[11,"get","dvm_data_source::module_cache","",3,[[["accesspath",3]],[["vmresult",6],["option",4]]]]],"p":[[3,"GrpcDataSource"],[3,"DsMeter"],[3,"MockDataSource"],[3,"ModuleCache"],[8,"DataAccess"],[8,"Clear"]]},\
"dvm_info":{"doc":"Responsible for gathering various metrics from the running…","i":[[0,"config","dvm_info","Defines `InfoServiceConfig` with all the configuration…",null,null],[3,"InfoServiceConfig","dvm_info::config","Configuration for service that gathers metrics about VM…",null,null],[12,"info_service_addr","","Info service address in the form of HOST_ADDRESS:PORT.…",0,null],[12,"metric_update_interval","","Metric refresh interval in seconds.",0,null],[12,"heartbeat_max_interval","","Maximum period between heartbeats. In seconds.",0,null],[12,"heartbeat_stimulation_interval","","The interval between ping requests to dvm. In seconds.",0,null],[0,"heartbeat","dvm_info","Defines `HeartRateMonitor`, that wraps an `AtomicU64`…",null,null],[3,"HeartRateMonitor","dvm_info::heartbeat","Heart rate monitor.",null,null],[11,"new","","Create a new heartbeat monitor with the given maximum…",1,[[["duration",3]],["heartratemonitor",3]]],[11,"beat","","Records new heartbeat timestamp.",1,[[]]],[11,"time_since_last_heartbeat","","Returns `Duration` since the last heartbeat timestamp.",1,[[],["duration",3]]],[11,"is_alive","","Checks whether time passed since last recorded heartbeat…",1,[[]]],[0,"metrics","dvm_info","Execution metrics.",null,null],[0,"collector","dvm_info::metrics","Defines `MetricsCollector` which handles background…",null,null],[3,"MetricsCollector","dvm_info::metrics::collector","Metrics collector.",null,null],[11,"new","","Create a `MetricsCollector` which fires once every…",2,[[["duration",3]],["metricscollector",3]]],[11,"get_metrics","","Get current metrics.",2,[[],["metrics",3]]],[0,"execution","dvm_info::metrics","Gathers metrics for the process (like cpu usage or memory).",null,null],[3,"ExecutionData","dvm_info::metrics::execution","Execution data.",null,null],[12,"process_time","","Time of processing.",3,null],[12,"result","","Execution result. May be empty. Empty if the value is not…",3,null],[3,"ExecutionResult","","Result of the action.",null,null],[12,"is_success","","Is action completed successfully.",4,null],[12,"status","","Status code.",4,null],[12,"gas_used","","Spent gas.",4,null],[3,"SystemMetrics","","Metrics for the running process.",null,null],[12,"cpu_usage","","Total CPU usage.",5,null],[12,"memory","","Memory usage for the process (in kB).",5,null],[12,"threads_count","","Number of threads in the current process.",5,null],[5,"store_metric","","Stores metric.",null,[[["executiondata",3]]]],[5,"get_system_metrics","","Get metrics for the CPU and memory of the node.",null,[[],["systemmetrics",3]]],[5,"drain_action_metrics","","Drain live metrics.",null,[[],[["hashmap",3],["vec",3]]]],[11,"new","","Create a new ExecutionData.",3,[[],["executiondata",3]]],[11,"with_result","","Crate execution with result data.",3,[[["executionresult",3],["option",4]],["executiondata",3]]],[11,"new","","Create new action result",4,[[],["executionresult",3]]],[0,"meter","dvm_info::metrics","Defines `ScopeMeter` which handles metric recording.",null,null],[3,"ScopeMeter","dvm_info::metrics::meter","Scope metric.",null,null],[11,"new","","Create a new scope meter.",6,[[],["scopemeter",3]]],[11,"set_result","","Set action result.",6,[[["executionresult",3]]]],[0,"metric","dvm_info::metrics","Defines `Metrics` struct and all required aggregates.",null,null],[3,"Metrics","dvm_info::metrics::metric","Application metrics;",null,null],[12,"execution_metrics","","Inner metrics state: (name of a metric) -> ExecutionMetric",7,null],[3,"Percentiles","","Time to process different chunks of executions.",null,null],[12,"p_50","","50% percentile",8,null],[12,"p_75","","75%",8,null],[12,"p_90","","90%",8,null],[3,"Average","","Average.",null,null],[12,"avg","","Average.",9,null],[12,"sd","","Standard deviation.",9,null],[3,"ExecutionMetric","","Aggregate for the executions metrics.",null,null],[12,"total_executions","","The number of actions performed in the time interval.",10,null],[12,"executions_without_results","","Number of actions without results. (Actions with panic.).",10,null],[12,"success_actions","","The number of actions completed with success.",10,null],[12,"statuses","","struct -> count",10,null],[12,"total_gas","","Total gas used in the interval.",10,null],[12,"percentiles","","Percentiles.",10,null],[12,"average","","Average.",10,null],[12,"min_time","","Min time.",10,null],[12,"max_time","","Max time.",10,null],[11,"calculate","","Calculate metrics based on a list of executions.",7,[[["hashmap",3],["vec",3]],["metrics",3]]],[11,"calculate","","Calculate metrics based on provided execution data.",10,[[["vec",3],["executiondata",3]],["executionmetric",3]]],[0,"prometheus","dvm_info::metrics","Helper functions to work with Prometheus.",null,null],[5,"encode_metrics","dvm_info::metrics::prometheus","Encode metrics.",null,[[["metrics",3],["systemmetrics",3],["option",4]],["string",3]]],[0,"task","dvm_info","Defines `PeriodicBackgroundTask` which is used to collect…",null,null],[3,"Daemon","dvm_info::task","Background process. Code executed with `spawn()` will be…",null,null],[3,"PeriodicBackgroundTask","","Signal thread task executed periodically with provided…",null,null],[11,"spawn","","Spawn daemon task in a separate thread.",11,[[],["daemon",3]]],[11,"spawn","","Spawn task.",12,[[["duration",3]],["periodicbackgroundtask",3]]],[0,"web","dvm_info","Defines `InfoService`, `tower`-based web service which…",null,null],[3,"InfoService","dvm_info::web","Instruction web service.",null,null],[3,"ServiceMaker","","Info service maker.",null,null],[5,"start_info_service","","Starts a new information service.",null,[[["socketaddr",4],["heartratemonitor",3],["duration",3]]]],[11,"from","dvm_info::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","dvm_info::heartbeat","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","dvm_info::metrics::collector","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","dvm_info::metrics::execution","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","dvm_info::metrics::meter","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","dvm_info::metrics::metric","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","dvm_info::task","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","dvm_info::web","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"drop","dvm_info::metrics::meter","",6,[[]]],[11,"drop","dvm_info::task","",11,[[]]],[11,"clone","dvm_info::config","",0,[[],["infoserviceconfig",3]]],[11,"clone","dvm_info::heartbeat","",1,[[],["heartratemonitor",3]]],[11,"clone","dvm_info::metrics::collector","",2,[[],["metricscollector",3]]],[11,"clone","dvm_info::metrics::execution","",3,[[],["executiondata",3]]],[11,"clone","","",4,[[],["executionresult",3]]],[11,"clone","","",5,[[],["systemmetrics",3]]],[11,"clone","dvm_info::metrics::metric","",7,[[],["metrics",3]]],[11,"clone","","",8,[[],["percentiles",3]]],[11,"clone","","",9,[[],["average",3]]],[11,"clone","","",10,[[],["executionmetric",3]]],[11,"default","dvm_info::config","",0,[[],["infoserviceconfig",3]]],[11,"default","dvm_info::metrics::execution","",3,[[],["executiondata",3]]],[11,"default","","",4,[[],["executionresult",3]]],[11,"default","","",5,[[],["systemmetrics",3]]],[11,"default","dvm_info::metrics::metric","",7,[[],["metrics",3]]],[11,"default","","",8,[[],["percentiles",3]]],[11,"default","","",9,[[],["average",3]]],[11,"default","","",10,[[],["executionmetric",3]]],[11,"cmp","dvm_info::metrics::execution","",3,[[["executiondata",3]],["ordering",4]]],[11,"cmp","","",4,[[["executionresult",3]],["ordering",4]]],[11,"eq","","",3,[[["executiondata",3]]]],[11,"ne","","",3,[[["executiondata",3]]]],[11,"eq","","",4,[[["executionresult",3]]]],[11,"ne","","",4,[[["executionresult",3]]]],[11,"eq","","",5,[[["systemmetrics",3]]]],[11,"ne","","",5,[[["systemmetrics",3]]]],[11,"eq","dvm_info::metrics::metric","",7,[[["metrics",3]]]],[11,"ne","","",7,[[["metrics",3]]]],[11,"eq","","",8,[[["percentiles",3]]]],[11,"ne","","",8,[[["percentiles",3]]]],[11,"eq","","",9,[[["average",3]]]],[11,"ne","","",9,[[["average",3]]]],[11,"eq","","",10,[[["executionmetric",3]]]],[11,"ne","","",10,[[["executionmetric",3]]]],[11,"partial_cmp","dvm_info::metrics::execution","",3,[[["executiondata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["executiondata",3]]]],[11,"le","","",3,[[["executiondata",3]]]],[11,"gt","","",3,[[["executiondata",3]]]],[11,"ge","","",3,[[["executiondata",3]]]],[11,"partial_cmp","","",4,[[["executionresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["executionresult",3]]]],[11,"le","","",4,[[["executionresult",3]]]],[11,"gt","","",4,[[["executionresult",3]]]],[11,"ge","","",4,[[["executionresult",3]]]],[11,"fmt","dvm_info::config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::heartbeat","",1,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::metrics::collector","",2,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::metrics::execution","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::metrics::metric","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::task","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::web","",13,[[["formatter",3]],["result",6]]],[11,"hash","dvm_info::metrics::execution","",3,[[]]],[11,"hash","","",4,[[]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","dvm_info::metrics::metric","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"deserialize","dvm_info::metrics::execution","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"into_app","dvm_info::config","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"poll_ready","dvm_info::web","",13,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",13,[[["request",3],["body",3]]]],[11,"poll_ready","","",14,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",14,[[]]]],"p":[[3,"InfoServiceConfig"],[3,"HeartRateMonitor"],[3,"MetricsCollector"],[3,"ExecutionData"],[3,"ExecutionResult"],[3,"SystemMetrics"],[3,"ScopeMeter"],[3,"Metrics"],[3,"Percentiles"],[3,"Average"],[3,"ExecutionMetric"],[3,"Daemon"],[3,"PeriodicBackgroundTask"],[3,"InfoService"],[3,"ServiceMaker"]]},\
"dvm_lang":{"doc":"Stores `stdlib` export and bytecode verification procedures.","i":[[0,"bytecode","dvm_lang","Procedures to work with bytecode.",null,null],[5,"extract_script_params","dvm_lang::bytecode","Get script signature.",null,[[],[["vec",3],["error",3],["result",4]]]],[0,"verification","","Procedures for verification of bytecode (restricted set of…",null,null],[3,"WhitelistVerifier","dvm_lang::bytecode::verification","Restricts set of modules allowed to use in script.",null,null],[5,"validate_bytecode_instructions","","Validate that script contains only allowed bytecode…",null,[[["compiledscript",3]],["result",6]]],[11,"new","","Only modules allowed to use are modules from whitelist and…",0,[[["string",3],["accountaddress",3],["hashmap",3],["vec",3]]]],[11,"verify_only_whitelisted_modules","","Verify whether all `use` statements in script importing…",0,[[["compiledscript",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]]],"p":[[3,"WhitelistVerifier"]]},\
"dvm_libra_deps":{"doc":"","i":[],"p":[]},\
"dvm_net":{"doc":"","i":[[0,"endpoint","dvm_net","",null,null],[3,"Http","dvm_net::endpoint","Create Endpoint with inner URI. Supports http and https.…",null,null],[3,"Ipc","","",null,null],[4,"Endpoint","","",null,null],[13,"Http","","",0,null],[13,"Ipc","","",0,null],[5,"from_uri","","",null,[[["uri",3]],[["result",4],["endpoint",4],["stderror",6]]]],[11,"connect","","",0,[[]]],[11,"is_ipc","","",0,[[]]],[11,"is_http","","",0,[[]]],[11,"connect","","Connect using default transport (http2).",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"connect","","Connect using UDS transport.",2,[[]]],[11,"as_str","","",2,[[],["option",4]]],[0,"serve","dvm_net","",null,null],[5,"serve_with_drop","dvm_net::serve","",null,[[["endpoint",4],["router",3]]]],[5,"serve_with_shutdown","","",null,[[["endpoint",4],["router",3]]]],[8,"ServeWith","","",null,null],[10,"serve_ext","","",3,[[["endpoint",4]],[["pin",3],["box",3]]]],[10,"serve_ext_with_shutdown","","",3,[[["endpoint",4],["future",8],["send",8]],[["pin",3],["box",3]]]],[0,"transport","dvm_net","",null,null],[3,"Stream","dvm_net::transport","",null,null],[3,"Listener","","",null,null],[3,"FdGuard","","",null,null],[5,"close_uds","","",null,[[["asref",8],["path",3]],[["error",3],["result",4]]]],[5,"unlink_uds","","",null,[[["asref",8],["path",3]],[["error",3],["result",4]]]],[6,"Guard","","",null,null],[0,"prelude","dvm_net","The DVM-NET Prelude",null,null],[8,"TryInto","dvm_net::prelude","An attempted conversion that consumes `self`, which may or…",null,null],[16,"Error","","The type returned in the event of a conversion error.",4,null],[10,"try_into","","Performs the conversion.",4,[[],["result",4]]],[8,"TryFrom","","Simple and safe type conversions that may fail in a…",null,null],[16,"Error","","The type returned in the event of a conversion error.",5,null],[10,"try_from","","Performs the conversion.",5,[[],["result",4]]],[6,"StdError","dvm_net","",null,null],[11,"from","dvm_net::endpoint","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","dvm_net::transport","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"clone","dvm_net::endpoint","",0,[[],["endpoint",4]]],[11,"clone","","",1,[[],["http",3]]],[11,"clone","","",2,[[],["ipc",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_net::transport","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_net::endpoint","",0,[[["formatter",3]],["result",6]]],[11,"try_from","","",0,[[["uri",3]],["result",4]]],[11,"from_str","","Create Endpoint from URI. Supports http and ipc schemes.",0,[[],["result",4]]],[11,"try_into","","",1,[[],[["result",4],["socketaddr",4]]]],[11,"try_into","","",0,[[],[["result",4],["socketaddr",4]]]],[11,"try_into","","",0,[[],[["uri",3],["result",4]]]],[11,"poll_read","dvm_net::transport","",6,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",6,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",6,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",6,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"new","","",6,[[["unixstream",3]]]],[11,"connect","","",6,[[["asref",8],["path",3]]]],[11,"into_incoming","","",6,[[]]],[11,"bind","","",7,[[["asref",8],["path",3]],[["result",4],["error",3]]]],[11,"incoming","","",7,[[]]],[11,"guarded","","Builder-pattern-like enable or disable inner fd-guard. If…",7,[[]]],[11,"set_guard","","Enable or disable inner fd-guard. If disable prevent…",7,[[]]],[11,"guard","","Take and return the guard. Return `None` if already taken.",7,[[],[["option",4],["fdguard",3]]]],[11,"disable","","",8,[[]]]],"p":[[4,"Endpoint"],[3,"Http"],[3,"Ipc"],[8,"ServeWith"],[8,"TryInto"],[8,"TryFrom"],[3,"Stream"],[3,"Listener"],[3,"FdGuard"]]},\
"dvm_runtime":{"doc":"Integration with MoveVM.","i":[[0,"gas_schedule","dvm_runtime","Defines dvm `CostTable`.",null,null],[5,"cost_table","dvm_runtime::gas_schedule","Specific gas per instruction configuration for dvm.",null,[[],["costtable",3]]],[0,"move_vm","dvm_runtime","Defines structures for script execution inside VM.",null,null],[3,"ExecutionMeta","dvm_runtime::move_vm","Stores metadata for vm execution.",null,null],[12,"max_gas_amount","","Max gas units to be used in transaction execution.",0,null],[12,"gas_unit_price","","Price in `DFI` coins per unit of gas.",0,null],[12,"sender","","Sender address of the transaction owner.",0,null],[3,"ExecutionResult","","Result of transaction execution.",null,null],[12,"write_set","","Changes to the chain.",1,null],[12,"events","","Emitted events.",1,null],[12,"gas_used","","Number of gas units used for execution.",1,null],[12,"status","","Status of execution (success, failure or retry).",1,null],[3,"Dvm","","Dfinance virtual machine.",null,null],[3,"Script","","Script bytecode + passed arguments and type parameters.",null,null],[3,"U64Store","","Deserializable `u64` for lcs.",null,null],[12,"val","","Internal value.",2,null],[3,"AddressStore","","Deserializable `AccountAddress` for lcs.",null,null],[12,"val","","Internal value.",3,null],[3,"VectorU8Store","","Deserializable `Vec<u8>` for lcs.",null,null],[12,"val","","Internal value.",4,null],[6,"VmResult","","Result enum for ExecutionResult",null,null],[11,"new","","Contructor.",0,[[["accountaddress",3]],["executionmeta",3]]],[11,"test","","Default metadata for testing.",0,[[],["executionmeta",3]]],[11,"new","","Create a new virtual machine with the given data source.",5,[[],["dvm",3]]],[11,"publish_module","","Publishes module to the chain.",5,[[["module",3],["executionmeta",3]],["vmresult",6]]],[11,"execute_script","","Executes passed script on the chain.",5,[[["script",3],["executionmeta",3]],["vmresult",6]]],[11,"new","","Contructor.",6,[[["vec",3],["typetag",4],["vec",3],["value",3],["vec",3]]]],[11,"code","","Script bytecode.",6,[[]]],[11,"args","","Parameters passed to main() function.",6,[[]]],[11,"into_inner","","Convert into internal data.",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_request","","",5,[[],["request",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_request","","",6,[[],["request",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"into_request","","",2,[[],["request",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"into_request","","",3,[[],["request",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"into_request","","",4,[[],["request",3]]],[11,"clone","","",1,[[],["executionresult",3]]],[11,"eq","","",1,[[["executionresult",3]]]],[11,"ne","","",1,[[["executionresult",3]]]],[11,"eq","","",2,[[["u64store",3]]]],[11,"ne","","",2,[[["u64store",3]]]],[11,"eq","","",3,[[["addressstore",3]]]],[11,"ne","","",3,[[["addressstore",3]]]],[11,"eq","","",4,[[["vectoru8store",3]]]],[11,"ne","","",4,[[["vectoru8store",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]]],"p":[[3,"ExecutionMeta"],[3,"ExecutionResult"],[3,"U64Store"],[3,"AddressStore"],[3,"VectorU8Store"],[3,"Dvm"],[3,"Script"]]},\
"dvm_services":{"doc":"gRPC services definitions.","i":[[0,"compiler","dvm_services","gRPC service for compiler.",null,null],[3,"CompilerService","dvm_services::compiler","Compilation service.",null,null],[11,"new","","Create a new compiler service with the given compiler.",0,[[["compiler",3]]]],[0,"metadata","dvm_services","gRPC service for script signature parameters.",null,null],[3,"MetadataService","dvm_services::metadata","Metadata service. Provides a function to retrieve metadata…",null,null],[0,"vm","dvm_services","gRPC service for vm script execution.",null,null],[3,"VmService","dvm_services::vm","Virtual machine service.",null,null],[11,"new","","Creates a new virtual machine service with the given data…",1,[[["option",4],["heartratemonitor",3]],["vmservice",3]]],[11,"from","dvm_services::compiler","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","dvm_services::metadata","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"initialize","","",2,[[]]],[11,"from","dvm_services::vm","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"clone","dvm_services::compiler","",0,[[],["compilerservice",3]]],[11,"clone","dvm_services::vm","",1,[[],["vmservice",3]]],[11,"default","dvm_services::metadata","",2,[[],["metadataservice",3]]],[11,"publish_module","dvm_services::vm","",1,[[["vmpublishmodule",3],["request",3]],[["pin",3],["box",3]]]],[11,"execute_script","","",1,[[["vmexecutescript",3],["request",3]],[["pin",3],["box",3]]]],[11,"compile","dvm_services::compiler","Compile source code.",0,[[["request",3],["sourcefile",3]],[["pin",3],["box",3]]]],[11,"compile","","Compiler source codes.",0,[[["request",3],["sourcefiles",3]],[["box",3],["pin",3]]]],[11,"get_signature","dvm_services::metadata","Gets script signature.",2,[[["request",3],["vmscript",3]],[["box",3],["pin",3]]]]],"p":[[3,"CompilerService"],[3,"VmService"],[3,"MetadataService"]]},\
"dvm_test_kit":{"doc":"","i":[[3,"Server","dvm_test_kit","",null,null],[3,"Signal","","",null,null],[3,"TestKit","","DVM test kit;",null,null],[5,"genesis_write_set","","",null,[[],["writeset",3]]],[5,"meta","","Returns execution meta with given address.",null,[[["accountaddress",3]],["executionmeta",3]]],[5,"account","","Create a new account address from hex string.",null,[[],["accountaddress",3]]],[11,"new","","",0,[[["mockdatasource",3]],["server",3]]],[11,"port","","",0,[[]]],[11,"new","","",1,[[],["signal",3]]],[11,"ensure_run","","",1,[[]]],[11,"shutdown","","",1,[[]]],[0,"compiled_protos","","",null,null],[0,"ds_grpc","dvm_test_kit::compiled_protos","",null,null],[3,"DsAccessPath","dvm_test_kit::compiled_protos::ds_grpc","",null,null],[12,"address","","AccountAddress",2,null],[12,"path","","",2,null],[3,"DsRawResponse","","",null,null],[12,"blob","","",3,null],[12,"error_code","","",3,null],[12,"error_message","","error message from libra, empty if ErrorCode::None",3,null],[0,"ds_raw_response","","",null,null],[4,"ErrorCode","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",null,null],[13,"None","","no error",4,null],[13,"BadRequest","","crash of compilation, logs will show stacktrace",4,null],[13,"NoData","","no such module",4,null],[3,"DsAccessPaths","dvm_test_kit::compiled_protos::ds_grpc","",null,null],[12,"paths","","",5,null],[3,"DsRawResponses","","",null,null],[12,"blobs","","",6,null],[0,"ds_service_client","","Generated client implementations.",null,null],[3,"DsServiceClient","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","GRPC service",null,null],[0,"ds_service_server","dvm_test_kit::compiled_protos::ds_grpc","Generated server implementations.",null,null],[8,"DsService","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","Generated trait containing gRPC methods that should be…",null,null],[10,"get_raw","","",7,[[["request",3],["dsaccesspath",3]],[["box",3],["pin",3]]]],[10,"multi_get_raw","","",7,[[["dsaccesspaths",3],["request",3]],[["pin",3],["box",3]]]],[0,"vm_grpc","dvm_test_kit::compiled_protos","",null,null],[3,"VmStatus","dvm_test_kit::compiled_protos::vm_grpc","Status of code contract execution.",null,null],[12,"major_status","","Major status.",8,null],[12,"sub_status","","Sub status if needed (optional).",8,null],[12,"message","","Message with error details if needed (optional).",8,null],[3,"StructIdent","","",null,null],[12,"address","","address of module owner",9,null],[12,"module","","module name.",9,null],[12,"name","","name of structure.",9,null],[12,"type_params","","Structure type parameters.",9,null],[3,"LcsTag","","",null,null],[12,"type_tag","","type tag.",10,null],[12,"vector_type","","vector type. Has a non-null value if the type_tag is equal…",10,null],[12,"struct_ident","","struct identifier. Has a non-null value if the type_tag is…",10,null],[3,"ModuleIdent","","",null,null],[12,"address","","module address.",11,null],[12,"name","","module name.",11,null],[3,"VmEvent","","VM event returns after contract execution.",null,null],[12,"sender_address","","Event sender address.",12,null],[12,"sender_module","","sender module.",12,null],[12,"event_type","","Type of value inside event.",12,null],[12,"event_data","","Event data in bytes to parse.",12,null],[3,"VmAccessPath","","Storage path",null,null],[12,"address","","account address.",13,null],[12,"path","","storage path.",13,null],[3,"VmValue","","VM value should be passed before execution and return…",null,null],[12,"type","","Type of operation",14,null],[12,"value","","Value returns from vm.",14,null],[12,"path","","Access path.",14,null],[3,"VmArgs","","Contract arguments.",null,null],[12,"type","","Argument type.",15,null],[12,"value","","Argument value.",15,null],[3,"VmPublishModule","","Publish module.",null,null],[12,"address","","owner of contract (module) or script executor.",16,null],[12,"max_gas_amount","","maximal total gas specified by wallet to spend for this…",16,null],[12,"gas_unit_price","","maximal price can be paid per gas.",16,null],[12,"code","","compiled contract code.",16,null],[3,"VmExecuteScript","","VM contract object to process.",null,null],[12,"address","","owner of contract (module) or script executor.",17,null],[12,"max_gas_amount","","maximal total gas specified by wallet to spend for this…",17,null],[12,"gas_unit_price","","maximal price can be paid per gas.",17,null],[12,"code","","compiled contract code.",17,null],[12,"type_params","","type parameters.",17,null],[12,"args","","Contract arguments.",17,null],[3,"VmExecuteResponse","","Response from VM contains write_set, events, gas used and…",null,null],[12,"write_set","","using string instead of bytes for now, as map support only…",18,null],[12,"events","","list of events executed during contract execution",18,null],[12,"gas_used","","Gas used during execution.",18,null],[12,"status","","Status of contract execution.",18,null],[12,"status_struct","","Main status of execution, might contain an error.",18,null],[3,"SourceFile","","Compiler API",null,null],[12,"text","","utf8 encoded source code with libra/bech32 addresses",19,null],[12,"address","","address of the sender, in bech32 form",19,null],[3,"CompilationUnit","","Compilation unit.",null,null],[12,"text","","utf8 encoded source code with libra/bech32 addresses",20,null],[12,"name","","name of the unit.",20,null],[3,"SourceFiles","","Compiler API",null,null],[12,"units","","Compilation units.",21,null],[12,"address","","address of the sender, in bech32 form",21,null],[3,"CompiledUnit","","Compiled source.",null,null],[12,"name","","name of the module/script.",22,null],[12,"bytecode","","bytecode of the compiled module/script",22,null],[3,"MultipleCompilationResult","","",null,null],[12,"units","","",23,null],[12,"errors","","list of error messages, empty if successful",23,null],[3,"CompilationResult","","",null,null],[12,"bytecode","","bytecode of the compiled module/script",24,null],[12,"errors","","list of error messages, empty if successful",24,null],[3,"VmScript","","Script Arguments API",null,null],[12,"code","","bytecode of script",25,null],[3,"Signature","","",null,null],[12,"arguments","","",26,null],[4,"ContractStatus","","Status of contract execution.",null,null],[13,"Discard","","If transaction should be ignored, because of error.",27,null],[13,"Keep","","If we keep transaction and write write_set.",27,null],[4,"VmTypeTag","","Type of contract argument.",null,null],[13,"Bool","","Bool 0x0 - false, 0x1 - true.",28,null],[13,"U64","","Uint64. Little-endian unsigned 64 bits integer.",28,null],[13,"Vector","","Vector of bytes.",28,null],[13,"Address","","Address, in bech32 form. 20 bytes.",28,null],[13,"U8","","U8",28,null],[13,"U128","","U128 Little-endian unsigned 128 bits integer.",28,null],[4,"LcsType","","",null,null],[13,"LcsBool","","Bool",29,null],[13,"LcsU64","","Uint64",29,null],[13,"LcsVector","","Vector of bytes.",29,null],[13,"LcsAddress","","Address, in bech32 form",29,null],[13,"LcsU8","","U8",29,null],[13,"LcsU128","","U128",29,null],[13,"LcsSigner","","Signer.",29,null],[13,"LcsStruct","","Struct.",29,null],[4,"VmWriteOp","","Write set operation type.",null,null],[13,"Value","","Insert or update value",30,null],[13,"Deletion","","Delete.",30,null],[0,"vm_module_publisher_client","","Generated client implementations.",null,null],[3,"VmModulePublisherClient","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","GRPC service",null,null],[0,"vm_script_executor_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmScriptExecutorClient","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",null,null],[0,"vm_compiler_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmCompilerClient","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",null,null],[0,"vm_multiple_sources_compiler_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmMultipleSourcesCompilerClient","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",null,null],[0,"vm_script_metadata_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmScriptMetadataClient","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",null,null],[0,"vm_module_publisher_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmModulePublisher","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","Generated trait containing gRPC methods that should be…",null,null],[10,"publish_module","","",31,[[["vmpublishmodule",3],["request",3]],[["box",3],["pin",3]]]],[0,"vm_script_executor_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmScriptExecutor","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","Generated trait containing gRPC methods that should be…",null,null],[10,"execute_script","","",32,[[["vmexecutescript",3],["request",3]],[["box",3],["pin",3]]]],[0,"vm_compiler_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmCompiler","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","Generated trait containing gRPC methods that should be…",null,null],[10,"compile","","",33,[[["sourcefile",3],["request",3]],[["pin",3],["box",3]]]],[0,"vm_multiple_sources_compiler_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmMultipleSourcesCompiler","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","Generated trait containing gRPC methods that should be…",null,null],[10,"compile","","",34,[[["request",3],["sourcefiles",3]],[["pin",3],["box",3]]]],[0,"vm_script_metadata_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmScriptMetadata","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","Generated trait containing gRPC methods that should be…",null,null],[10,"get_signature","","",35,[[["request",3],["vmscript",3]],[["pin",3],["box",3]]]],[6,"ArcMut","dvm_test_kit","",null,null],[17,"PORT_RANGE","","",null,null],[11,"new","","Creates a new test kit with stdlib.",36,[[],["testkit",3]]],[11,"empty","","Creates a new test kit without stdlib.",36,[[]]],[11,"with_genesis","","Creates a new test kit with given write set.",36,[[["writeset",3]],["testkit",3]]],[11,"publish_module","","Publish module.",36,[[["executionmeta",3]],["vmexecuteresponse",3]]],[11,"add_std_module","","Add std module to data source.",36,[[]]],[11,"execute_script","","Execute script.",36,[[["vec",3],["vec",3],["executionmeta",3],["vmargs",3],["structident",3]],["vmexecuteresponse",3]]],[11,"assert_success","","Asserts that a response is success.",36,[[["vmexecuteresponse",3]]]],[11,"merge_result","","Merge execution result.",36,[[["vmexecuteresponse",3]]]],[11,"data_source","","Returns mock data source.",36,[[],["mockdatasource",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"initialize","","",1,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_request","","",36,[[],["request",3]]],[11,"vzip","","",36,[[]]],[11,"clear","","",36,[[]]],[11,"initialize","","",36,[[]]],[11,"get_module","","",36,[[["moduleid",3]],[["error",3],["option",4],["result",4]]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"clear","","",3,[[]]],[11,"initialize","","",3,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"equivalent","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"clear","","",4,[[]]],[11,"initialize","","",4,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_request","","",5,[[],["request",3]]],[11,"vzip","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"initialize","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"initialize","","",6,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_request","","",37,[[],["request",3]]],[11,"vzip","","",37,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"initialize","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_request","","",9,[[],["request",3]]],[11,"vzip","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"initialize","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_request","","",10,[[],["request",3]]],[11,"vzip","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_request","","",11,[[],["request",3]]],[11,"vzip","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"initialize","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_request","","",12,[[],["request",3]]],[11,"vzip","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"initialize","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_request","","",13,[[],["request",3]]],[11,"vzip","","",13,[[]]],[11,"clear","","",13,[[]]],[11,"initialize","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_request","","",14,[[],["request",3]]],[11,"vzip","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"initialize","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_request","","",15,[[],["request",3]]],[11,"vzip","","",15,[[]]],[11,"clear","","",15,[[]]],[11,"initialize","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_request","","",16,[[],["request",3]]],[11,"vzip","","",16,[[]]],[11,"clear","","",16,[[]]],[11,"initialize","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_request","","",17,[[],["request",3]]],[11,"vzip","","",17,[[]]],[11,"clear","","",17,[[]]],[11,"initialize","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_request","","",18,[[],["request",3]]],[11,"vzip","","",18,[[]]],[11,"clear","","",18,[[]]],[11,"initialize","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_request","","",19,[[],["request",3]]],[11,"vzip","","",19,[[]]],[11,"clear","","",19,[[]]],[11,"initialize","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_request","","",20,[[],["request",3]]],[11,"vzip","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"initialize","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_request","","",21,[[],["request",3]]],[11,"vzip","","",21,[[]]],[11,"clear","","",21,[[]]],[11,"initialize","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_request","","",22,[[],["request",3]]],[11,"vzip","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"initialize","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_request","","",23,[[],["request",3]]],[11,"vzip","","",23,[[]]],[11,"clear","","",23,[[]]],[11,"initialize","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_request","","",24,[[],["request",3]]],[11,"vzip","","",24,[[]]],[11,"clear","","",24,[[]]],[11,"initialize","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_request","","",25,[[],["request",3]]],[11,"vzip","","",25,[[]]],[11,"clear","","",25,[[]]],[11,"initialize","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_request","","",26,[[],["request",3]]],[11,"vzip","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"initialize","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_request","","",27,[[],["request",3]]],[11,"equivalent","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"clear","","",27,[[]]],[11,"initialize","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_request","","",28,[[],["request",3]]],[11,"equivalent","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"clear","","",28,[[]]],[11,"initialize","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_request","","",29,[[],["request",3]]],[11,"equivalent","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"clear","","",29,[[]]],[11,"initialize","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_request","","",30,[[],["request",3]]],[11,"equivalent","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"clear","","",30,[[]]],[11,"initialize","","",30,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_request","","",38,[[],["request",3]]],[11,"vzip","","",38,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_request","","",39,[[],["request",3]]],[11,"vzip","","",39,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_request","","",40,[[],["request",3]]],[11,"vzip","","",40,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_request","","",41,[[],["request",3]]],[11,"vzip","","",41,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_request","","",42,[[],["request",3]]],[11,"vzip","","",42,[[]]],[11,"cmp","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["errorcode",4]],["ordering",4]]],[11,"cmp","dvm_test_kit::compiled_protos::vm_grpc","",27,[[["contractstatus",4]],["ordering",4]]],[11,"cmp","","",28,[[["vmtypetag",4]],["ordering",4]]],[11,"cmp","","",30,[[["vmwriteop",4]],["ordering",4]]],[11,"cmp","","",29,[[["lcstype",4]],["ordering",4]]],[11,"hash","","",28,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",30,[[]]],[11,"hash","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[]]],[11,"hash","dvm_test_kit::compiled_protos::vm_grpc","",29,[[]]],[11,"partial_cmp","","",29,[[["lcstype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["errorcode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","dvm_test_kit::compiled_protos::vm_grpc","",30,[[["vmwriteop",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",27,[[["contractstatus",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",28,[[["vmtypetag",4]],[["ordering",4],["option",4]]]],[11,"default","","",15,[[],["vmargs",3]]],[11,"default","","",9,[[],["structident",3]]],[11,"default","","",17,[[],["vmexecutescript",3]]],[11,"default","","",16,[[],["vmpublishmodule",3]]],[11,"default","","",24,[[],["compilationresult",3]]],[11,"default","","",19,[[],["sourcefile",3]]],[11,"default","","",13,[[],["vmaccesspath",3]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",3,[[],["dsrawresponse",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",30,[[],["vmwriteop",4]]],[11,"default","","",18,[[],["vmexecuteresponse",3]]],[11,"default","","",28,[[],["vmtypetag",4]]],[11,"default","","",12,[[],["vmevent",3]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",5,[[],["dsaccesspaths",3]]],[11,"default","","",6,[[],["dsrawresponses",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",11,[[],["moduleident",3]]],[11,"default","","",23,[[],["multiplecompilationresult",3]]],[11,"default","","",8,[[],["vmstatus",3]]],[11,"default","","",22,[[],["compiledunit",3]]],[11,"default","","",20,[[],["compilationunit",3]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[],["errorcode",4]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",2,[[],["dsaccesspath",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",27,[[],["contractstatus",4]]],[11,"default","","",25,[[],["vmscript",3]]],[11,"default","","",26,[[],["signature",3]]],[11,"default","","",10,[[],["lcstag",3]]],[11,"default","","",21,[[],["sourcefiles",3]]],[11,"default","","",29,[[],["lcstype",4]]],[11,"default","","",14,[[],["vmvalue",3]]],[11,"eq","","",16,[[["vmpublishmodule",3]]]],[11,"ne","","",16,[[["vmpublishmodule",3]]]],[11,"eq","","",25,[[["vmscript",3]]]],[11,"ne","","",25,[[["vmscript",3]]]],[11,"eq","","",8,[[["vmstatus",3]]]],[11,"ne","","",8,[[["vmstatus",3]]]],[11,"eq","","",10,[[["lcstag",3]]]],[11,"ne","","",10,[[["lcstag",3]]]],[11,"eq","","",11,[[["moduleident",3]]]],[11,"ne","","",11,[[["moduleident",3]]]],[11,"eq","","",23,[[["multiplecompilationresult",3]]]],[11,"ne","","",23,[[["multiplecompilationresult",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",3,[[["dsrawresponse",3]]]],[11,"ne","","",3,[[["dsrawresponse",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",30,[[["vmwriteop",4]]]],[11,"eq","","",29,[[["lcstype",4]]]],[11,"eq","","",19,[[["sourcefile",3]]]],[11,"ne","","",19,[[["sourcefile",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",2,[[["dsaccesspath",3]]]],[11,"ne","","",2,[[["dsaccesspath",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",13,[[["vmaccesspath",3]]]],[11,"ne","","",13,[[["vmaccesspath",3]]]],[11,"eq","","",9,[[["structident",3]]]],[11,"ne","","",9,[[["structident",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",5,[[["dsaccesspaths",3]]]],[11,"ne","","",5,[[["dsaccesspaths",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["errorcode",4]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",24,[[["compilationresult",3]]]],[11,"ne","","",24,[[["compilationresult",3]]]],[11,"eq","","",28,[[["vmtypetag",4]]]],[11,"eq","","",26,[[["signature",3]]]],[11,"ne","","",26,[[["signature",3]]]],[11,"eq","","",15,[[["vmargs",3]]]],[11,"ne","","",15,[[["vmargs",3]]]],[11,"eq","","",12,[[["vmevent",3]]]],[11,"ne","","",12,[[["vmevent",3]]]],[11,"eq","","",17,[[["vmexecutescript",3]]]],[11,"ne","","",17,[[["vmexecutescript",3]]]],[11,"eq","","",20,[[["compilationunit",3]]]],[11,"ne","","",20,[[["compilationunit",3]]]],[11,"eq","","",18,[[["vmexecuteresponse",3]]]],[11,"ne","","",18,[[["vmexecuteresponse",3]]]],[11,"eq","","",14,[[["vmvalue",3]]]],[11,"ne","","",14,[[["vmvalue",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",6,[[["dsrawresponses",3]]]],[11,"ne","","",6,[[["dsrawresponses",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",22,[[["compiledunit",3]]]],[11,"ne","","",22,[[["compiledunit",3]]]],[11,"eq","","",21,[[["sourcefiles",3]]]],[11,"ne","","",21,[[["sourcefiles",3]]]],[11,"eq","","",27,[[["contractstatus",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",14,[[],["vmvalue",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",39,[[],["vmscriptexecutorclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",26,[[],["signature",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",41,[[],["vmmultiplesourcescompilerclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",9,[[],["structident",3]]],[11,"clone","","",12,[[],["vmevent",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",40,[[],["vmcompilerclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",18,[[],["vmexecuteresponse",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","",37,[[],["dsserviceclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",30,[[],["vmwriteop",4]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[],["errorcode",4]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",19,[[],["sourcefile",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","",38,[[],["vmmodulepublisherclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",24,[[],["compilationresult",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",2,[[],["dsaccesspath",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",25,[[],["vmscript",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",5,[[],["dsaccesspaths",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",27,[[],["contractstatus",4]]],[11,"clone","","",13,[[],["vmaccesspath",3]]],[11,"clone","","",15,[[],["vmargs",3]]],[11,"clone","","",28,[[],["vmtypetag",4]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",6,[[],["dsrawresponses",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",21,[[],["sourcefiles",3]]],[11,"clone","","",22,[[],["compiledunit",3]]],[11,"clone","","",17,[[],["vmexecutescript",3]]],[11,"clone","","",23,[[],["multiplecompilationresult",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",3,[[],["dsrawresponse",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",42,[[],["vmscriptmetadataclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",16,[[],["vmpublishmodule",3]]],[11,"clone","","",29,[[],["lcstype",4]]],[11,"clone","","",11,[[],["moduleident",3]]],[11,"clone","","",10,[[],["lcstag",3]]],[11,"clone","","",20,[[],["compilationunit",3]]],[11,"clone","","",8,[[],["vmstatus",3]]],[11,"encode_raw","","",19,[[]]],[11,"merge_field","","",19,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",19,[[]]],[11,"clear","","",19,[[]]],[11,"encode_raw","","",11,[[]]],[11,"merge_field","","",11,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"encode_raw","","",9,[[]]],[11,"merge_field","","",9,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","","",23,[[]]],[11,"merge_field","","",23,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",23,[[]]],[11,"clear","","",23,[[]]],[11,"encode_raw","","",12,[[]]],[11,"merge_field","","",12,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"encode_raw","","",26,[[]]],[11,"merge_field","","",26,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","","",22,[[]]],[11,"merge_field","","",22,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"encode_raw","","",15,[[]]],[11,"merge_field","","",15,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",15,[[]]],[11,"clear","","",15,[[]]],[11,"encode_raw","","",10,[[]]],[11,"merge_field","","",10,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::ds_grpc","",2,[[]]],[11,"merge_field","","",2,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::vm_grpc","",21,[[]]],[11,"merge_field","","",21,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",21,[[]]],[11,"clear","","",21,[[]]],[11,"encode_raw","","",13,[[]]],[11,"merge_field","","",13,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",13,[[]]],[11,"clear","","",13,[[]]],[11,"encode_raw","","",20,[[]]],[11,"merge_field","","",20,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"encode_raw","","",24,[[]]],[11,"merge_field","","",24,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",24,[[]]],[11,"clear","","",24,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::ds_grpc","",3,[[]]],[11,"merge_field","","",3,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",3,[[]]],[11,"clear","","",3,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::vm_grpc","",17,[[]]],[11,"merge_field","","",17,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",17,[[]]],[11,"clear","","",17,[[]]],[11,"encode_raw","","",16,[[]]],[11,"merge_field","","",16,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",16,[[]]],[11,"clear","","",16,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",25,[[]]],[11,"clear","","",25,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::ds_grpc","",5,[[]]],[11,"merge_field","","",5,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::vm_grpc","",14,[[]]],[11,"merge_field","","",14,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"encode_raw","","",18,[[]]],[11,"merge_field","","",18,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",18,[[]]],[11,"clear","","",18,[[]]],[11,"drop","dvm_test_kit","",0,[[]]],[11,"clone","","",1,[[],["signal",3]]],[11,"default","","",1,[[]]],[11,"default","","",36,[[]]],[11,"poll","","",1,[[["context",3],["pin",3]],["poll",4]]],[11,"get","","",36,[[["accesspath",3]],[["result",4],["option",4],["error",3]]]],[11,"multi_get","","",36,[[],[["result",4],["vec",3],["error",3]]]],[11,"is_genesis","","",36,[[]]],[11,"new","dvm_test_kit::compiled_protos::ds_grpc","",2,[[["vec",3]],["dsaccesspath",3]]],[11,"with_blob","","",3,[[],["dsrawresponse",3]]],[11,"with_error","","",3,[[["string",3],["errorcode",4]],["dsrawresponse",3]]],[11,"error_code","","Returns the enum value of `error_code`, or the default if…",3,[[],["errorcode",4]]],[11,"set_error_code","","Sets `error_code` to the provided enum value.",3,[[["errorcode",4]]]],[11,"is_valid","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","Returns `true` if `value` is a variant of `ErrorCode`.",4,[[]]],[11,"from_i32","","Converts an `i32` to a `ErrorCode`, or `None` if `value`…",4,[[],[["errorcode",4],["option",4]]]],[11,"connect","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","Attempt to create a new client by connecting to a given…",37,[[]]],[11,"new","","",37,[[],["dsserviceclient",3]]],[11,"with_interceptor","","",37,[[],["dsserviceclient",3]]],[11,"get_raw","","",37,[[]]],[11,"multi_get_raw","","",37,[[]]],[11,"type_tag","dvm_test_kit::compiled_protos::vm_grpc","Returns the enum value of `type_tag`, or the default if…",10,[[],["lcstype",4]]],[11,"set_type_tag","","Sets `type_tag` to the provided enum value.",10,[[["lcstype",4]]]],[11,"type","","Returns the enum value of `type`, or the default if the…",14,[[],["vmwriteop",4]]],[11,"set_type","","Sets `type` to the provided enum value.",14,[[["vmwriteop",4]]]],[11,"type","","Returns the enum value of `type`, or the default if the…",15,[[],["vmtypetag",4]]],[11,"set_type","","Sets `type` to the provided enum value.",15,[[["vmtypetag",4]]]],[11,"status","","Returns the enum value of `status`, or the default if the…",18,[[],["contractstatus",4]]],[11,"set_status","","Sets `status` to the provided enum value.",18,[[["contractstatus",4]]]],[11,"with_bytecode","","",24,[[["vec",3]],["compilationresult",3]]],[11,"with_errors","","",24,[[["vec",3],["string",3]],["compilationresult",3]]],[11,"new","","",25,[[["vec",3]],["vmscript",3]]],[11,"new","","",26,[[],["signature",3]]],[11,"arguments","","Returns an iterator which yields the valid enum values…",26,[[],[["filtermap",3],["cloned",3]]]],[11,"push_arguments","","Appends the provided enum value to `arguments`.",26,[[["vmtypetag",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `ContractStatus`.",27,[[]]],[11,"from_i32","","Converts an `i32` to a `ContractStatus`, or `None` if…",27,[[],[["contractstatus",4],["option",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `VmTypeTag`.",28,[[]]],[11,"from_i32","","Converts an `i32` to a `VmTypeTag`, or `None` if `value`…",28,[[],[["option",4],["vmtypetag",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `LcsType`.",29,[[]]],[11,"from_i32","","Converts an `i32` to a `LcsType`, or `None` if `value` is…",29,[[],[["lcstype",4],["option",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `VmWriteOp`.",30,[[]]],[11,"from_i32","","Converts an `i32` to a `VmWriteOp`, or `None` if `value`…",30,[[],[["vmwriteop",4],["option",4]]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","Attempt to create a new client by connecting to a given…",38,[[]]],[11,"new","","",38,[[],["vmmodulepublisherclient",3]]],[11,"with_interceptor","","",38,[[],["vmmodulepublisherclient",3]]],[11,"publish_module","","",38,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","Attempt to create a new client by connecting to a given…",39,[[]]],[11,"new","","",39,[[],["vmscriptexecutorclient",3]]],[11,"with_interceptor","","",39,[[],["vmscriptexecutorclient",3]]],[11,"execute_script","","",39,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","Attempt to create a new client by connecting to a given…",40,[[]]],[11,"new","","",40,[[],["vmcompilerclient",3]]],[11,"with_interceptor","","",40,[[],["vmcompilerclient",3]]],[11,"compile","","",40,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","Attempt to create a new client by connecting to a given…",41,[[]]],[11,"new","","",41,[[],["vmmultiplesourcescompilerclient",3]]],[11,"with_interceptor","","",41,[[],["vmmultiplesourcescompilerclient",3]]],[11,"compile","","",41,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","Attempt to create a new client by connecting to a given…",42,[[]]],[11,"new","","",42,[[],["vmscriptmetadataclient",3]]],[11,"with_interceptor","","",42,[[],["vmscriptmetadataclient",3]]],[11,"get_signature","","",42,[[]]]],"p":[[3,"Server"],[3,"Signal"],[3,"DsAccessPath"],[3,"DsRawResponse"],[4,"ErrorCode"],[3,"DsAccessPaths"],[3,"DsRawResponses"],[8,"DsService"],[3,"VmStatus"],[3,"StructIdent"],[3,"LcsTag"],[3,"ModuleIdent"],[3,"VmEvent"],[3,"VmAccessPath"],[3,"VmValue"],[3,"VmArgs"],[3,"VmPublishModule"],[3,"VmExecuteScript"],[3,"VmExecuteResponse"],[3,"SourceFile"],[3,"CompilationUnit"],[3,"SourceFiles"],[3,"CompiledUnit"],[3,"MultipleCompilationResult"],[3,"CompilationResult"],[3,"VmScript"],[3,"Signature"],[4,"ContractStatus"],[4,"VmTypeTag"],[4,"LcsType"],[4,"VmWriteOp"],[8,"VmModulePublisher"],[8,"VmScriptExecutor"],[8,"VmCompiler"],[8,"VmMultipleSourcesCompiler"],[8,"VmScriptMetadata"],[3,"TestKit"],[3,"DsServiceClient"],[3,"VmModulePublisherClient"],[3,"VmScriptExecutorClient"],[3,"VmCompilerClient"],[3,"VmMultipleSourcesCompilerClient"],[3,"VmScriptMetadataClient"]]},\
"movec":{"doc":"","i":[[4,"Opt","movec","",null,null],[13,"Init","","",0,null],[12,"project_name","movec::Opt","",1,null],[12,"repository","","",1,null],[12,"address","","",1,null],[13,"New","movec","",0,null],[12,"project_name","movec::Opt","",2,null],[12,"repository","","",2,null],[12,"address","","",2,null],[13,"Update","movec","",0,null],[13,"Build","","",0,null],[13,"Check","","",0,null],[5,"main","","",null,[[]]],[5,"handle_error","","",null,[[["result",4],["error",3]]]],[5,"load_manifest","","",null,[[["path",3]],["movetoml",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[]]]],"p":[[4,"Opt"],[13,"Init"],[13,"New"]]},\
"status_table":{"doc":"","i":[[3,"Opts","status_table","Status table generator.",null,null],[12,"output","","Optional path to the output file. If not passed, result…",0,null],[5,"main","","",null,[[]]],[5,"status_table_json","","",null,[[],[["string",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Opts"]]},\
"stdlib":{"doc":"","i":[[3,"Stdlib","stdlib","",null,null],[12,"modules","","",0,null],[3,"Value","","",null,null],[3,"WS","","",null,null],[5,"build_external_std","","",null,[[["stdlib",3]],[["result",4],["error",3],["writeset",3]]]],[5,"build_std","","",null,[[],["writeset",3]]],[5,"zero_std","","",null,[[],["writeset",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"initialize","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"into_request","","",2,[[],["request",3]]],[11,"from","","",2,[[["writeset",3]]]],[11,"clone","","",0,[[],["stdlib",3]]],[11,"default","","",0,[[]]],[11,"cmp","","",1,[[["value",3]],["ordering",4]]],[11,"eq","","",1,[[["value",3]]]],[11,"ne","","",1,[[["value",3]]]],[11,"partial_cmp","","",1,[[["value",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["value",3]]]],[11,"le","","",1,[[["value",3]]]],[11,"gt","","",1,[[["value",3]]]],[11,"ge","","",1,[[["value",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]]],"p":[[3,"Stdlib"],[3,"Value"],[3,"WS"]]},\
"stdlib_builder":{"doc":"","i":[[3,"Opts","stdlib_builder","",null,null],[12,"source_dir","","Path to the directory with the standard library.",0,null],[12,"output","","Optional path to the output file. If not passed, result…",0,null],[12,"debug_print","","Verbose mode flag. Enables debug printing of internals…",0,null],[12,"pretty_print","","Enables pretty printing of all output including…",0,null],[5,"main","","",null,[[]]],[5,"load_module","","",null,[[["path",3]],[["result",4],["error",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Opts"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);