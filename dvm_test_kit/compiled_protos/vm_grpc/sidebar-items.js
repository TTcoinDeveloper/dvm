initSidebarItems({"enum":[["ContractStatus","Status of contract execution."],["LcsType",""],["VmTypeTag","Type of contract argument."],["VmWriteOp","Write set operation type."]],"mod":[["vm_compiler_client","Generated client implementations."],["vm_compiler_server","Generated server implementations."],["vm_module_publisher_client","Generated client implementations."],["vm_module_publisher_server","Generated server implementations."],["vm_multiple_sources_compiler_client","Generated client implementations."],["vm_multiple_sources_compiler_server","Generated server implementations."],["vm_script_executor_client","Generated client implementations."],["vm_script_executor_server","Generated server implementations."],["vm_script_metadata_client","Generated client implementations."],["vm_script_metadata_server","Generated server implementations."]],"struct":[["CompilationResult",""],["CompilationUnit","Compilation unit."],["CompiledUnit","Compiled source."],["LcsTag",""],["ModuleIdent",""],["MultipleCompilationResult",""],["Signature",""],["SourceFile","Compiler API"],["SourceFiles","Compiler API"],["StructIdent",""],["VmAccessPath","Storage path"],["VmArgs","Contract arguments."],["VmEvent","VM event returns after contract execution."],["VmExecuteResponse","Response from VM contains write_set, events, gas used and status for specific contract."],["VmExecuteScript","VM contract object to process."],["VmPublishModule","Publish module."],["VmScript","Script Arguments API"],["VmStatus","Status of code contract execution."],["VmValue","VM value should be passed before execution and return after execution (with opcodes), write_set in nutshell."]]});